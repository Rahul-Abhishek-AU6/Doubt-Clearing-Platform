{"version":3,"sources":["components/Registration/Registration.js","components/Forum/ForumHome.js","components/Loginout/LoginPage.js","components/Loginout/LogoutPage.js","components/Search/Search.js","components/Footer/Footer.js","components/Navbar.js","components/Dashboard/Dashboard.js","components/Forum/WalkForm.js","components/Forum/TheWalks.js","components/Forum/Yapping.js","components/Forum/CoolPics.js","components/Posts/PostForm.js","components/Posts/CommentForm.js","components/Posts/CommentArray.js","components/Posts/EditCommentForm.js","components/Posts/EditPost.js","components/Posts/Posts.js","components/Admin/SearchForm.js","components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["Registration","useState","name","email","password","userData","setUserData","isRegistered","setIsRegistered","type","message","alertMessage","setAlertMessage","inputEmail","useRef","inputPassword","handleInputChange","e","target","id","value","registerUser","a","preventDefault","current","focus","test","length","localStorage","clear","fetch","method","headers","body","JSON","stringify","then","result","json","setTimeout","style","color","to","class","className","role","for","onChange","ref","onClick","ForumHome","useLocation","walkResult","setWalkResult","totalMessages","setTotalMessages","lastName","setLastName","lastUpdated","setLastUpdated","loadPage","apiGetWalk","console","log","forEach","element","createdAt","Date","toString","substring","updatedAt","total","userReply","user","useEffect","height","backgroundColor","padding","margin","paddingTop","paddingLeft","border","width","borderLeft","LoginPage","rememberMe","isLoggedIn","setIsLoggedIn","setImg","setName","loginUser","apiResult","img","setItem","points","error","checked","LogoutPage","isLoggedOut","setIsLoggedOut","logoutRequest","Search","Footer","Navbar","isShown","setShown","showClass","href","Dashboard","WalkForm","props","title","myThread","setMyThread","updateThread","newThread","handleSubmit","submitThread","url","newURL","trim","replace","walkData","data","slug","apiThread","alert","placeholder","cols","rows","TheWalks","showForm","setShowForm","alertFailure","msg","apiPoints","textAlign","background","boxShadow","map","event","fontSize","pathname","_id","info","pop","Yapping","CoolPics","PostForm","reply","myPost","setMyPost","submitForm","postData","postId","walkPost","userId","post","alertSuccess","CommentForm","comment","addReply","setAddReply","replyId","userComment","submitReply","idx","commentData","CommentArray","item","commenterName","postcomment","EditCommentForm","editReply","setEditReply","handleEditSubmit","editReplyData","edited","userEdit","EditPost","editPost","setEditPost","editPostData","postEdit","Posts","setWalkPost","replyForm","setReplyForm","editForm","setEditForm","replyResult","setReplyResult","numberReply","setNumberReply","setMyLike","myName","setMyName","pageStyle","mainPost","mainBtn","display","fontWeight","btn","params","useParams","location","apiGetWalkPost","apiGetReply","replyArray","likes","state","handleLike","deleteBtnPost","apiDeleteReply","handleDelete","apiDeletePost","window","addBtnReply","SearchForm","Admin","App","minHeight","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1f088ed8.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nconst Registration = () => {\n    const [ userData, setUserData ] = useState({ name: \"\", email: \"\", password: \"\"});\n    const [ isRegistered, setIsRegistered ] = useState( false );\n    const [ alertMessage, setAlertMessage ] = useState( { type: \"\", message: \"\"} );\n\n    const inputEmail = useRef();\n    const inputPassword = useRef();\n\n    const handleInputChange = (e) => {\n        const { id, value } = e.target; \n        setUserData( { ...userData, [id]: value } );\n    }\n\n    const registerUser = async(e) => {\n        e.preventDefault();\n        \n        if( userData.email === \"\" ) {\n            inputEmail.current.focus();\n            setAlertMessage( { type: 'danger', message: 'Please provide your Email!' } );\n            return;\n        }\n    \n        if( !(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) ) {\n            inputEmail.current.focus();\n            setAlertMessage( { type: 'danger', message: 'Please provide a valid Email!' } );\n            return;\n        }\n\n        if( userData.password === \"\" ) {\n            inputPassword.current.focus();\n            setAlertMessage( { type: 'danger', message: 'Please provide a password!' } );\n            return;\n        }\n\n        if( userData.password.length < 8 ) {\n            inputPassword.current.focus();\n            setAlertMessage( { type: 'danger', message: 'Please provide a longer password (8 characters min)!' } );\n            return;\n        }\n\n        localStorage.clear();\n\n        const apiResult = await fetch('/api/user/registration', \n            {   method: 'post',\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(userData)\n          }).then( result=>result.json())       \n                  \n        if( apiResult.message ){\n            setAlertMessage( { type: 'success', message: 'Thank you successfully registered!' } );\n            setTimeout( function(){ setIsRegistered(true); }, 1000 );\n        } else {\n            setAlertMessage( { type: 'danger', message: 'Try again' } );\n        }\n        setUserData({ name: \"\", email: \"\", password: \"\"})\n    }\n\n    return (\n        <div style={{color: \"black\"}}>\n            \n            { isRegistered ? <Redirect to='/login' /> : '' }\n            <section class=\" text-center\">\n                <div class=\"container\">\n                    <h1>User Registration</h1>\n                    <p class=\"lead text-muted\">Register and enjoy your stay at forum!</p>\n                </div>\n            </section>\n            <div className={ alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide' } role=\"alert\">\n                {alertMessage.message}\n            </div>\n        \n            <div class=\"container\">\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                    Register\n                    </div>\n                    <div class=\"card-body\">\n                        <form role=\"form\">\n                            <input type='hidden' id='db_id' value='' />\n                            <div class=\"form-group\">\n                                <label for=\"name\">First Name</label>\n                                <input value={userData.name} onChange={handleInputChange} id='name' type=\"text\" class=\"form-control\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"email\">Email Address</label>\n                                <input \n                                    value={userData.email} \n                                    onChange={handleInputChange} \n                                    ref={inputEmail}\n                                    id=\"email\" type=\"email\" class=\"form-control\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"userPassword\">Password</label>\n                                <input \n                                    value={userData.password} \n                                    onChange={handleInputChange} \n                                    ref={inputPassword}\n                                    id=\"password\" type=\"password\" class=\"form-control\" />\n                            </div>\n                            <button onClick={registerUser} class=\"btn btn-primary submit\" >Register</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Registration;","import React, {useState, useEffect} from 'react';\n// import './Forum/style.css'\nimport { Link, useLocation} from 'react-router-dom';\n\nconst ForumHome = () => {\n    let location = useLocation();\n    const [ walkResult, setWalkResult ] = useState([])\n    const [ totalMessages, setTotalMessages ] = useState( '' )\n    const[ lastName, setLastName ] = useState ('')\n    const[ lastUpdated, setLastUpdated] = useState('')\n    // console.log(location)\n\n    const loadPage = async () => {\n        const apiGetWalk = await fetch('/api/walkdata').then( result => result.json() )\n        console.log('apigetwalk is', apiGetWalk)\n        if (apiGetWalk.length == 0){\n            setLastName('');\n            setLastUpdated('')\n        } else {\n                apiGetWalk.forEach(element => { \n                    element.createdAt = new Date(element.createdAt).toString().substring(4, 15)   \n                    element.updatedAt = new Date(element.updatedAt).toString().substring(4, 15) \n                });\n                let total = 0;\n                apiGetWalk.forEach(element => { \n                    total = total + element.userReply.length;\n                });\n                setWalkResult( apiGetWalk);\n                setTotalMessages(total);\n                setLastName( apiGetWalk[0].user.name);\n                setLastUpdated( apiGetWalk[0].updatedAt)\n            }\n        \n\n        }\n        // console.log(walkResult)\n        \n        useEffect( function(){\n            loadPage();\n        }, [] );\n    \n    return (\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-lg-12 mx-auto\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Forum</h2>\n                </div>\n                <div class=\"col-lg-12 mx-auto\">\n                    <h2 class=\"my-4\">Welcome To The Doubt Clearing Forum!</h2>\n                    <p>You're landed on the doubt clearing forum.</p>\n                </div>\n                <div class=\"row ml-2 mt-4\">\n                    <div class=\"col-lg-10 mx-auto mt-4\">\n                        <div class=\"row py-2\"  style={{backgroundColor: \"#90ee90\", border: \"1px solid #4ee44e\"}}>\n                            <div class=\"col-lg-8 my-2\">\n                                    <div class=\"row my-auto\" >\n                                        <div class=\"col-lg-2 mt-4\">\n                                            <div class=\"mt-4\" style={{width: \"80px\", margin: \"0 auto\"}}><i class=\"fas fa-envelope-open-text fa-5x\"></i> </div>\n                                        </div>\n                                        <div class=\"col-lg-10 mt-2\">\n                                        <Link to=\"/the-walks\" className=\"nav-link\" ><h3>Post by Rahul Abhishek</h3></Link>\n                                            <p class=\"ml-3\">Here you can write/find the already asked questions.</p>\n                                            <p class=\"ml-3\"><b>Discussions</b><span class=\"px-2\">{walkResult.length}</span><b>Messages</b><span class=\"px-2\">{totalMessages}</span></p>\n                                        </div>\n                                    </div>     \n                            </div>          \n                            <div class=\"col-lg-4 my-2\" style={{borderLeft: \"2px solid #9f6934\"}}>\n                                <div class=\"row my-auto\"   >\n                                    <div class=\"col-lg-12 ml-3 mt-4\">\n                                        <p><b>Latest by:</b><span class=\"px-2\">{lastName}</span><b></b><span class=\"px-2\">{lastUpdated}</span></p>\n                                    </div>\n                                    \n                                </div>\n                            </div> \n                        </div> \n                    </div>\n                    <div class=\"col-lg-10 mx-auto\">\n                        <div class=\"row py-2\" style={{backgroundColor: \"#90ee90\", border: \"1px solid #4ee44e\"}}>\n                            <div class=\"col-lg-8 my-2\">\n                                    <div class=\"row my-auto\" >\n                                        <div class=\"col-lg-2\">\n                                            <div class=\"mt-4\" style={{width: \"80px\", margin: \"0 auto\"}}><i class=\"fas fa-envelope-open-text fa-5x\"></i> </div>\n                                        </div>\n                                        <div class=\"col-lg-10  mt-2\">\n                                        <Link to=\"/the-walks\" className=\"nav-link\" ><h3>2nd Post by Rahul Abhishek</h3></Link>\n                                            <p class=\"ml-3\">For posting aby questions, you need to register first. </p>\n                                            <p class=\"ml-3\"><b>Discussions</b><span class=\"px-2\">10</span><b>Messages</b><span class=\"px-2\">10</span></p>\n                                        </div>\n                                    </div>     \n                            </div>          \n                            <div class=\"col-lg-4 my-2\" style={{borderLeft: \"2px solid #9f6934\"}}>\n                                <div class=\"row my-auto\">\n                                    <div class=\"col-lg-12  ml-3 mt-4\">\n                                    <p><b>Latest by:</b><span class=\"px-2\">{lastName}</span><b></b><span class=\"px-2\">{lastUpdated}</span></p>\n                                    </div>\n                                    \n                                </div>\n                            </div> \n                        </div> \n                    </div>\n                    <div class=\"col-lg-10 mx-auto\">\n                        <div class=\"row py-2\" style={{backgroundColor: \"#90ee90\", border: \"1px solid #4ee44e\"}}>\n                            <div class=\"col-lg-8 my-2\">\n                                    <div class=\"row my-auto\" >\n                                        <div class=\"col-lg-2\">\n                                            <div class=\"mt-4\" style={{width: \"80px\", margin: \"0 auto\"}}><i class=\"fas fa-envelope-open-text fa-5x\"></i></div>\n                                        </div>\n                                        <div class=\"col-lg-10\">\n                                        <Link to=\"/the-walks\" className=\"nav-link\" ><h3>Suggestion</h3></Link>\n                                            <p class=\"ml-3\">Above two post are dummies, created for informational purpose.</p>\n                                            <p class=\"ml-3\"><b>Discussions</b><span class=\"px-2\">10</span><b>Messages</b><span class=\"px-2\">10</span></p>\n                                        </div>\n                                    </div>     \n                            </div>          \n                            <div class=\"col-lg-4 my-2\" style={{borderLeft: \"2px solid #9f6934\"}}>\n                                <div class=\"row my-auto\">\n                                    <div class=\"col-lg-12  ml-3 mt-4\">\n                                    <p><b>Latest by:</b><span class=\"px-2\">{lastName}</span><b></b><span class=\"px-2\">{lastUpdated}</span></p>\n                                    </div>\n                                    \n                                </div>\n                            </div> \n                        </div> \n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default ForumHome\n","import React, { useState, useRef } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nexport const UserContext = React.createContext();\n\nconst LoginPage = () => {\n    // DECLARATIVE FORM OF PROGRAMMING\n    const [ userData, setUserData ] = useState({ name: \"\", email: localStorage.email, password: \"\", rememberMe: true });\n    const [ isLoggedIn, setIsLoggedIn ] = useState( false );\n    const [ alertMessage, setAlertMessage ] = useState( { type: \"\", message: \"\"} );\n    const [ img, setImg ] = useState( '' );\n    const [ name, setName ] = useState( '' );\n\n    const inputEmail = useRef();\n    const inputPassword = useRef();\n\n    const handleInputChange = ( e ) => {\n        const { id, value } = e.target;\n        setUserData( { ...userData, [id]: value } );\n    }\n\n    const handleCheckbox = () => {\n        setUserData( { ...userData, rememberMe: !userData.rememberMe } );\n    }\n\n    const loginUser = async ( e ) => {\n        e.preventDefault();\n        setUserData({ name: \"\", email: localStorage.email, password: \"\", rememberMe: true })\n        \n        if( userData.email === \"\" ) {\n            inputEmail.current.focus();\n            setAlertMessage( { type: 'danger', message: 'Please provide your Email!' } );\n            return;\n        }\n    \n        if( userData.password === \"\" || userData.password.length < 8 ) {\n            inputPassword.current.focus();\n            setAlertMessage( { type: 'danger', message: 'Please provide your password!' } );\n            return;\n        }\n\n        const apiResult = await fetch('/api/user/login', \n            {   method: 'post',\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(userData)\n            }).then( result=>result.json())\n            // console.log(apiResult)\n            setImg(apiResult.img);  \n            setName(apiResult.name);  \n            localStorage.setItem(\"email\", apiResult.email);\n            localStorage.setItem('id', apiResult.id);\n            localStorage.setItem('name', apiResult.name);\n            localStorage.setItem('points', apiResult.points)\n            localStorage.setItem('type', apiResult.type)\n                  \n        if( !apiResult.message ){\n            setAlertMessage( { type: 'danger', message: apiResult.error } );\n            return;\n        };\n\n        setAlertMessage( { type: 'success', message: 'Loading, please wait...' } );\n        localStorage.email = ( apiResult.rememberMe ? apiResult.email : '' );\n        setTimeout( function(){ setIsLoggedIn(true); }, 1000 );\n        \n    }\n\n    return (\n        <div>\n        {/* <UserContext.Provider value ={{name, img}}>\n            <Router>\n                <Route exact path=\"/the-walks\" component={TheWalks} />\n            </Router>\n        </UserContext.Provider> */}\n        <div style={{color: \"black\"}}>\n            { isLoggedIn ? <Redirect to='/' /> : '' }\n\n            <div className={ alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide' } role=\"alert\">\n                {alertMessage.message}\n            </div>\n            <section class=\"text-center\">\n                <div class=\"container\">\n                    <h1>Login</h1>\n                    <p class=\"lead text-muted\">Welcome back!</p>\n                </div>\n            </section>\n        \n            <div class=\"container\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <form role=\"form\">\n                            <div class=\"form-group\">\n                                <label for=\"userEmail\">Email Address</label>\n                                <input \n                                    value={userData.email} \n                                    onChange={handleInputChange} \n                                    ref={inputEmail}\n                                    id=\"email\" type=\"email\" class=\"form-control\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"userPassword\">Password</label>\n                                <input \n                                    value={userData.password} \n                                    onChange={handleInputChange} \n                                    ref={inputPassword}\n                                    id=\"password\" type=\"password\" class=\"form-control\" />\n                            </div>\n                            <button onClick={loginUser} type=\"button\" class=\"btn btn-primary submit\">Login</button>\n                            &nbsp; \n                            <input type=\"checkbox\" checked={userData.rememberMe} onChange={handleCheckbox} />                        \n                            <label class='text-secondary' for='rememberMe'>Remember Me</label> &nbsp;\n                            <Link to=\"/registration\">Need to Register?</Link>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default LoginPage;","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\n\nconst LogoutPage = () => {\n    const [ isLoggedOut, setIsLoggedOut ] = useState( false );\n\n    useEffect( function(){\n        // attempt to request logout (only once)\n        logoutRequest();\n    }, [] );\n\n    // call the api to logout (and clear session)\n    const logoutRequest = async() => {\n        localStorage.id = \"\";\n        localStorage.type = \"\";\n        if(localStorage.email == 'april@test.com'){\n            localStorage.email=\"\";\n        };\n        localStorage.points = \"\";\n        setTimeout( function(){ setIsLoggedOut(true); }, 1000 );\n    }\n    \n\n    return (\n        <div>\n            { isLoggedOut ? <Redirect to='/login' /> : '' }\n            <section class=\"jumbotron text-center\">\n                <div class=\"container\">\n                    <p class=\"lead text-muted\">Please wait, logging out...</p>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default LogoutPage;","import React from 'react'\n\nfunction Search() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Search\n","import React from 'react'\n\nfunction Footer() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Footer\n","import React, {useState} from 'react'\nimport { Link, useLocation} from 'react-router-dom';\n\nconst Navbar = () => {\n    const location = useLocation();\n    const [isShown, setShown] = useState(false);\n    let showClass = !isShown ? `collapse navbar-collapse`: `collapse navbar-collapse show`;\n\n    let id = localStorage.id\n    let userName = localStorage.name;\n    let email = localStorage.email;\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <Link to=\"/\" className=\"navbar-brand\" href=\"#\">Rahul <i class=\"fas fa-book-reader\"></i> Abhishek</Link>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" onClick={()=>setShown(!isShown)}>\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                 <div className={showClass} id=\"navbarNav\"> \n                    <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\" >Home</Link>\n                    </li>\n                    {/* <li className=\"nav-item\">\n                        <Link to=\"/forum\" className=\"nav-link\" href=\"#\">Forum</Link>\n                    </li> */}\n                    {/* <li className=\"nav-item\">\n                        <Link to=\"/search\" className=\"nav-link\" href=\"#\">Search</Link>\n                    </li> */}\n                    { !localStorage.id ?\n                    <li className=\"nav-item\">\n                        <Link to=\"/registration\" className=\"nav-link\" href=\"#\">Register</Link>\n                    </li> : ''}\n                    { email == \"april@test.com\" ?\n                    <li className=\"nav-item\">\n                        <Link to=\"/admin\" className=\"nav-link\" href=\"#\">Admin</Link>\n                    </li> : ''}\n                    { !id ? \n                    <li className=\"nav-item\">\n                    <Link to=\"/login\" className=\"nav-link\" href=\"#\">Login</Link>\n                    </li> : \n                    <li className=\"nav-item\">\n                    <Link to={`/user/${id}`} className=\"nav-link\" href=\"#\">Dashboard</Link>\n                    </li>}    \n\n                    {id ? \n                    <li className=\"nav-item\">\n                    <Link to=\"/logout\" className=\"nav-link\" href=\"#\">Logout</Link>\n                    </li>: ''}                        \n            \n                    {/* <li className=\"nav-item dropdown\">\n                    <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <span class=\"mr-1\"><i class=\"fas fa-user\"></i></span> {`${userName}`}\n                    </a>\n                        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                            <Link to={`/user/${id}`} className=\"nav-link\" href=\"#\">Dashboard</Link>\n                            <div class=\"dropdown-divider\"></div>\n                            <Link to=\"/logout\" className=\"nav-link\" href=\"#\">Logout</Link>\n                        </div>\n                    </li>} */}\n                    </ul>\n                </div>\n                </nav>\n            \n        </div>\n    )\n}\n\nexport default Navbar\n","import React, {useState, useEffect} from 'react'\nimport { Link, useParams, useLocation, Redirect} from 'react-router-dom';\n\n\nconst Dashboard = () => {\n    const [ userData, setUserData] = useState('');\n    const[ createdAt, setCreatedAt] = useState('');\n    const[ updatedAt, setUpdatedAt] = useState('');\n    const[ userPosts, setUserPosts] = useState([]);\n\n    let id = localStorage.id;\n\n    useEffect( function(){\n        loadPage();\n    }, [] );\n\n    // if(localStorage.id == ''){\n    //     return <Redirect to='/login' />\n    // }\n    return( localStorage.id == '' ? <Redirect to='/login' />: '')\n\n    const loadPage = async() => {\n        const apiUserData = await fetch(`/api/userdata/${id}`).then( result => result.json() )\n        \n            let created = new Date(apiUserData.createdAt).toString().substring(4, 15) \n             \n            let updated = new Date(apiUserData.updatedAt).toString().substring(4, 21) \n           \n        \n        setUserData(apiUserData);\n        setCreatedAt(created);\n        setUpdatedAt(updated);\n        setUserPosts(apiUserData.userThreadWalk)\n        localStorage.setItem(\"type\", apiUserData.userType)\n        localStorage.setItem(\"points\", apiUserData.points)\n        \n        // console.log(apiUserData)\n    }\n    // console.log(userData);\n    \n\n\n    return (\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-lg-12 col-md-12 mx-auto\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Dashboard</h2>\n                </div>\n                \n                <div class=\"col-lg-10 col-md-10 mx-auto mt-4\">\n                    <div class=\"row justify-content-center mt-4 p-4\" style={{boxShadow: \"5px 3px #9E9E9E\", border: \"1px solid #9f6934\"}}>\n                        <div class=\"col-lg-3 col-md-3 mt-2\">\n                            <img src={userData.img} style={{minHeight:'70px', height:'180px'}} class=\"img-thumbnail\"/>                        \n                        </div>\n                        <div class=\"col-lg-7 col-md-7 mt-2\" style={{padding: '0px' }}>\n                            <div class=\"row pl-4\">\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\n                                        <b>Name: </b> {userData.name}                               \n                                    </div>\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\n                                        <b>Email: </b> {userData.email}                        \n                                    </div>\n                                    <div class=\"col-lg-7 pb-2\" style={{padding: '0px' }}>\n                                        <b>Points Earned: </b> {userData.points}   \n                                        { userData.points < 5 ? <p class=\"ml-2\">(Points should be atleast 5 to create a post)</p> : ''}                     \n                                    </div>\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\n                                         {userData.points < 5 ? <div><b>Member Type: </b> NewBie</div> : <div><b>Member Type: </b> Member </div>}          \n                                    </div>\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\n                                        <b>Joined Date: </b>{createdAt}                     \n                                    </div>\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\n                                        <b>Last Active on: </b>{updatedAt}                      \n                                    </div>\n                            </div>  \n                        </div>\n                            \n\n                    </div>\n                </div>\n                {userPosts.length != 0 ? \n                <div class=\"col-lg-10 col-md-10 mx-auto mt-4\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12 col-md-12\">\n                            <h3>Your Posts</h3>\n                        </div>    \n                        {userPosts.map( element => <div class=\"col-lg-12\"><Link to={`/the-walks/${element.slug}/${element._id}`}>{element.title}</Link></div>)}\n                    </div>    \n                    \n                </div> :\n                <div class=\"col-lg-10 col-md-10 mx-auto mt-4\">\n                    <div class=\"col-lg-12 col-md-12\">\n                        <h3>No Posts To Show</h3> \n                    </div> \n                </div>    }   \n            </div>  \n        </div>      \n    )\n}\n\nexport default Dashboard\n","import React,{useState} from 'react'\n\nconst WalkForm = (props) => {  \n    const [myThread, setMyThread] = useState( {title: \"\", message: \"\"});\n    const [alertMessage, setAlertMessage] = useState( {type: \"\", message: \"\"})\n       \n    \n    const updateThread = (e) => {\n        e.preventDefault();\n       let id = e.target.id;\n\n    //    console.log(id)\n       let value = e.target.value;\n    //    console.log(value)\n       //spread the operator and insert the values\n        let newThread =  ({ ...myThread, [id] : value})\n        // console.log( newThread );\n      \n       setMyThread(newThread)\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        props.submitThread(e)\n        let url = myThread.title\n        let newURL = url.trim().replace(/\\s/g , \"-\").replace(/\\'/g, \"\");\n\n        if (myThread.message != ''){\n        let walkData = {\n            id : localStorage.id,\n            data : myThread,\n            slug : newURL,\n            name: localStorage.name\n        }\n    \n        const apiThread = await fetch('/api/newthread', \n            {   method: 'post'\n            ,\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(walkData)\n          }).then( result=>result.json())   \n        \n          if(apiThread.message){\n              setAlertMessage({type: 'success', message: apiThread.message})\n              setTimeout( function(){ setAlertMessage( {} ); }, 1000 );\n          } else {\n            setAlertMessage({type: 'danger', message: apiThread.message})\n            setTimeout( function(){ setAlertMessage({}); }, 1000 );\n          }\n          props.loadPage();\n        } else {\n            alert( 'message is empty ')\n        }  \n    }\n\n    const handleCancel = (e) => {\n        props.submitThread(e) \n    }\n\n\n    return (\n        <div class=\"col-lg-12\">\n            <div class=\"row justify-content-center\">\n                <div class={ alertMessage.type ? `alert alert-${alertMessage.type}` : `d-hide`} role=\"alert\">\n                    {alertMessage.message}\n                </div>\n                <form>\n                    <textarea type=\"textarea\" name=\"\" id=\"title\" value={myThread.title} onChange={updateThread} placeholder=\"Title\" cols=\"100\" rows=\"1\" ></textarea><br/>\n                    <textarea type=\"textarea\" name=\"\" id=\"message\" value={myThread.message} onChange={updateThread} placeholder=\"Your Message\" cols=\"100\" rows=\"5\" ></textarea><br/>\n                    \n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleSubmit}>Add</button>  \n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleCancel}>Cancel</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default WalkForm\n","import React, {useState, useEffect} from 'react'\nimport WalkForm from './WalkForm';\nimport { Link, useParams, useLocation} from 'react-router-dom';\n\n\nconst TheWalks = () => {\n    const location = useLocation();\n    const[showForm, setShowForm] = useState(false);\n    const [ walkResult, setWalkResult ] = useState([])\n    const [alertMessage, setAlertMessage] = useState( {type: \"\", message: \"\"})\n   \n    \n    const submitThread = (e) => {\n        e.preventDefault();\n        setShowForm( false );\n    }\n\n   const alertSuccess = (msg) => {\n        setAlertMessage({type: 'success', message: msg})\n        setTimeout( function(){ setAlertMessage( {} ); }, 2000 );\n    }\n\n    //passing data from child to parent\n    const alertFailure = (msg) => {\n        setAlertMessage({type: 'danger', message: msg})\n        setTimeout( function(){ setAlertMessage({}); }, 2000 );\n    }\n\n    const loadPage = async () => {\n        const apiGetWalk = await fetch('/api/walkdata').then( result => result.json() )\n        // console.log(apiGetWalk)\n        apiGetWalk.forEach(element => { \n            element.createdAt = new Date(element.createdAt).toString().substring(4, 15)   \n            element.updatedAt = new Date(element.updatedAt).toString().substring(4, 15) \n        });\n\n        // apiGetWalk.map( element => {\n        //     element.userReply = element.userReply.pop();\n        //     // console.log(lastReply)\n        // }); \n        // console.log(apiGetWalk[0].userReply[0])\n        // console.log(apiGetWalk[0].lastReply)\n\n        setWalkResult([...apiGetWalk])\n    }\n    // console.log(walkResult);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        let id = localStorage.id;\n\n        if(localStorage.type == \"admin\"){\n            setShowForm( true );\n        } else if( !localStorage.id ) {\n            alertFailure('Dear guest, feel free to visit, to participate please register')\n        } else {\n                const apiPoints = await fetch(`/api/points/${id}`).then( result => result.json() )\n                // console.log(apiPoints);\n            \n                if( apiPoints >= 5){\n                    setShowForm( true );\n                }  else if(apiPoints < 5){\n                    alertFailure('Not Enough Points to Participate in the forum. Check your dashboard.')\n                } \n        }\n    }\n     \n    useEffect( function(){\n        loadPage();\n    }, [] );\n\n    // console.log(walkResult)\n    // console.log(walkResult._id)\n    return (\n\n        <div>\n  \n         <div style={{textAlign: \"center\"}}\n            class={alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide'  } role=\"alert\" >\n            {alertMessage.message}\n        </div>\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-lg-12\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Forum</h2>\n                </div>\n                \n                    {/* <div class={alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide'  } role=\"alert\" >\n                        {alertMessage.message}\n                    </div> */}\n               \n                <div class=\"col-lg-12 mx-auto\">\n                    <h2 class=\"my-4\">Demo by Rahul Abhishek</h2>\n                    <p>This is the dummy page where you can see the discussions anytime.. </p>\n                </div>\n                <div class=\"col-lg-10 mx-auto\">\n                    <div class=\"row mx-auto justify-content-end\">\n                        {/* <button onClick={function(){localStorage.points > 5 ? setShowForm(true) : setShowForm(false); alert('Not enough points to start a new thread')}}>New Thread</button> */}\n                        <button style={{background: '#90ee90', border: '3px solid #9f6934', padding: '10px 15px', boxShadow: '3px 3px #9E9E9E'}} onClick={handleSubmit}> <i class=\"fas fa-pen-nib\"></i> New Post</button><br/>\n                        {showForm ? <WalkForm submitThread ={submitThread} loadPage={loadPage}/> : ''}\n                    </div>\n                </div>\n                <div>\n                    <div class=\"row\">\n                        <div class=\"col-lg-12 mx-auto justify-content-end\" style={{border:\"1px solid black\"}}></div>\n                        \n                    </div>    \n\n                </div>\n                <div class=\"col-lg-10 mx-auto mt-4\"  >                      \n                         <div>\n                        \n                            <table class=\"table table-sm\">\n                                <thead>\n                                    <tr style={{height: \"50px\", border: \"3px solid #9f6934\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\", color: \"white\"}}>\n                                        <th  style={{ width:\"10%\" }}></th>\n                                        <th  style={{ width:\"30%\" }}>Title</th>\n                                       \n                                        <th class=\"text-center\" style={{ width: \"20%\" }} >Replies</th>\n                                        <th class=\"text-center\" style={{ width: \"20%\" }} >Views</th>\n                                        <th class=\"text-center\" style={{ width: \"20%\" }} >Last Activity</th>\n                                    </tr>\n                                </thead>\n                                { walkResult.length !== 0 ? walkResult.map( event => <tbody>\n                                    <tr style={{ height: '80px', border: \"3px solid #9f6934\" }}>\n                                        <td style={{padding: '20px 0 0 20px'}}><i class=\"fas fa-envelope-open-text fa-2x\"></i></td>\n                                        <td style={{padding: '10px 0 0 0'}} key={event._id}>\n                                            <div style={{fontSize: \"25px\"}}>\n                                                <Link to={{ pathname: `/the-walks/${event.slug}/${event._id}`,\n                                                                info:{id: event._id}                   \n                                                                }}> \n                                            <b>{event.title}</b> </Link><br/>\n                                            </div>\n                                            <div class=\"my-2\">\n                                                {event.user.name}<br/>\n                                                {event.createdAt}  \n                                            </div>\n                                        \n                                         </td>\n                                        \n                                        <td class=\"text-center\" style={{padding: '20px 0 0 0'}}>{event.userReply.length}</td>\n                                        <td class=\"text-center\" style={{padding: '20px 0 0 0'}}>10</td>\n                                        <td class=\"text-center\" style={{padding: '20px 0 0 0'}}>\n                                            {event.updatedAt}<br/>\n                                            {/* {event.userReply.map( el => el.name)}</td> */}\n                                            {function() \n                                                {event.userReply.pop();\n                                                return event.userReply[0].name; }}</td>\n                                    </tr>\n                                \n                                </tbody>) : ''}\n                            </table>\n                        </div>\n                </div>         \n            </div>\n        </div>\n     </div>      \n    )\n}\n\nexport default TheWalks\n","import React from 'react'\n\nfunction Yapping() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Yapping\n","import React from 'react'\n\nfunction CoolPics() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default CoolPics\n","import React, {useState, useEffect} from 'react'\n\nconst PostForm = (props) => {\n    // console.log(props)\n    const[ myPost, setMyPost ] = useState( { reply:\"\"} )\n    \n        \n    const updatePost = (e) => {\n        e.preventDefault();\n        let post = { reply: e.target.value }\n        setMyPost(post)\n        // console.log(post);\n    }\n\n    const handleSubmit = async (e) => {   \n        e.preventDefault();\n        props.submitForm(e);    \n        let userId = localStorage.id;\n\n        if( myPost.reply != ''){\n\n        let postData = {\n            name: localStorage.name,\n            postId: props.walkPost._id,\n            userId: localStorage.id,\n            post: myPost\n        }\n            \n        const apiReply = await fetch('/api/reply', \n            {   method: 'post',\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postData)\n          }).then( result=>result.json()) ; \n        //   console.log(apiReply.message);\n         \n            if(apiReply.message){\n                props.alertSuccess('Thank You! Your reply posted sucessfully.');\n                \n            } else {\n                props.alertFailure('Try again! Failed to post the message');\n            \n            }\n          props.loadPage();\n        }\n        else{\n            props.alertFailure('Reply is empty');\n        }  \n    }\n\n    const handleCancel = (e) => {\n        props.submitForm(e);  \n    }\n    // function handleCancel(e){\n    //     e.preventDefault();\n    //     props.submitForm();\n    // }\n\n    return (\n        <div>\n            \n             <form class=\"mt-2\">\n                \n                <textarea type=\"textarea\" name=\"\" id=\"message\" value={myPost.reply} onChange={updatePost} placeholder=\"Your Message\" cols=\"100\" rows=\"5\" ></textarea><br/>\n                \n                <button type=\"submit\" onClick={handleSubmit}>Submit</button>  \n                <button type=\"submit\" onClick={handleCancel}>Cancel</button>\n                {/* <button type=\"submit\" onClick={e => handleCancel}>Cancel</button>  */}\n            </form>\n        </div>\n    )\n}\n\nexport default PostForm\n","import React, {useState} from 'react'\n\nconst CommentForm = (props) => {\n    const[ addReply, setAddReply] = useState({comment:''})\n    // console.log(props.reply)\n    // console.log(props.reply._id)\n    let replyId = props.reply._id;\n    let postId = props.reply.postId;\n    // console.log(replyId, postId)\n\n    const updateThread = async(e) => {\n        e.preventDefault();\n        let userComment = e.target.value;\n        // console.log(userComment);\n        setAddReply({comment: userComment})\n    }\n    // console.log(addReply);\n\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        props.submitReply(e, props.idx);\n\n        if( addReply.comment != ''){\n        let commentData = {\n            postId:postId,\n            userId:localStorage.id,\n            name: localStorage.name,\n            replyId: replyId,\n            comment: addReply.comment\n        }   \n\n    const apiReply = await fetch('/api/comment/', \n            {   method: 'post',\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(commentData)\n          }).then( result=>result.json())   \n        //   console.log(apiReply)\n        \n        if(apiReply.message){\n            props.alertSuccess('Thank You! Your comment posted sucessfully.');\n        }else {\n            props.alertFailure('Try again! Failed to post the message');   \n        }\n          //load page after the post submitted to db\n          props.loadPage();\n        }\n        else {\n            props.alertFailure('Try again! The comment form is empty')\n        }     \n    }\n    \n    const handleCancel = (e) => {\n        props.submitReply(e) \n    }\n\n    return (\n        \n        <div class=\"col-lg-12 mt-4\">\n            <div class=\"row justify-content-end\">\n                <form>\n                \n                    <textarea type=\"text\" name=\"\" id=\"message\" value={addReply.comment} onChange={updateThread} placeholder=\"Your Message\" cols=\"100\" rows=\"5\"></textarea><br/>\n                    \n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleSubmit}>Add</button> \n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleCancel}>Cancel</button> \n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default CommentForm\n","import React, {useState} from 'react'\n\nconst CommentArray = (props) => {\n    // const [ myArray, setMyArray] = useState('')\n    // let newComment = ( [{...props.comment}] )\n\n    // console.log(props)\n\n    return (\n        <div>\n            { props.comment.length !== 0 ? props.comment.map( item => <div class=\"row justify-content-end\" >\n            <div class=\"col-lg-12\" key={item._id} style={{border:'2px solid #9f6934'}}> \n                <div class=\"col-lg-12 my-2\">\n                    <div key={item._id}><b>{item.commenterName}</b></div>\n                    <div></div>\n                </div>\n                <div class=\"col-lg-12 mb-2\" key={item._id}>{item.postcomment}</div>\n            </div>\n            \n        </div>) : ''}\n\n        </div>\n       \n    )\n}\n\nexport default CommentArray\n","import React, {useState} from 'react'\n\n\nconst EditCommentForm = (props) => {\n    // console.log(props.reply)\n    const[ editReply, setEditReply ] = useState( {message: props.reply.message} )\n\n    const handleEdit = (e) => {\n        e.preventDefault();\n        let userEdit = e.target.value;\n        setEditReply( {message: userEdit} );\n\n    }\n    // console.log(editReply)\n    \n    const handleEditSubmit = async(e) =>{ \n        e.preventDefault();\n\n    let editReplyData = {\n            postId:props.reply.postId,\n            userId:props.reply.postId,\n            replyId:props.reply._id,\n            edited: editReply.message\n        } \n\n        const apiReply = await fetch('/api/editReply', \n            {   method: 'post',\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(editReplyData)\n          }).then( result=>result.json())   \n\n    props.submitReply(e)\n    props.loadPage();\n    }\n    \n    const handleEditCancel = (e) => {\n        props.submitReply(e)  \n    }\n\n    return (\n        <div class=\"col-lg-12 ml-2 mt-4\">\n            <div class=\"row\">\n                <form>\n                    <textarea type=\"text\" name=\"\" id=\"message\" value={editReply.message} onChange={handleEdit} placeholder=\"Your Message\" cols=\"100\" rows=\"5\"></textarea><br/>\n                    \n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleEditSubmit}>submit</button> \n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleEditCancel}>Cancel</button> \n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditCommentForm\n","import React, {useState} from 'react'\n\nconst EditPost = (props) => {\n    // console.log(props.walkPost)\n    const[ editPost, setEditPost ] = useState( {message:props.walkPost.message}  )\n\n\n    const editThread = (e) => {\n        e.preventDefault();\n        let postEdit = e.target.value;\n        setEditPost( {message: postEdit} );\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        let editPostData = {\n            postId:props.walkPost._id,\n            userId:props.walkPost.userId,\n            edited: editPost.message\n        } \n\n        const apiReply = await fetch('/api/editPost', \n            {   method: 'post',\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(editPostData)\n          }).then( result=>result.json())   \n\n    props.submitForm(e)\n    props.loadPage();\n    }\n\n    const handleCancel = (e) => {\n        \n        props.submitForm(e)\n        e.preventDefault();\n    }\n\n    return (\n        <div>\n             <div class=\"col-lg-12 ml-2\">\n                <div class=\"row justify-content-center\">\n                    {/* <div class={ alertMessage.type ? `alert alert-${alertMessage.type}` : `d-hide`} role=\"alert\">\n                        {alertMessage.message}\n                    </div> */}\n                    <form>\n                        \n                        <textarea type=\"textarea\" name=\"\" id=\"message\" value={editPost.message} onChange={editThread} placeholder=\"Your Message\" cols=\"100\" rows=\"5\" ></textarea><br/>\n                        \n                        <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleSubmit}>Submit</button>  \n                        <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleCancel}>Cancel</button>\n                    </form>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default EditPost\n","import React, {useState, useEffect, } from 'react'\nimport { useLocation, useParams, Redirect, useHistory} from 'react-router-dom';\nimport PostForm from './PostForm';\nimport CommentForm from './CommentForm';\nimport CommentArray from './CommentArray';\nimport EditCommentForm from './EditCommentForm';\nimport EditPost from './EditPost';\n\n\nconst Posts = (props) => {\n    const [ walkPost, setWalkPost ] = useState({});\n    const [ showForm, setShowForm ] = useState(false);\n    const [ replyForm, setReplyForm ] = useState(false);\n    const [ editForm, setEditForm ] = useState(false);\n    const [ editPost, setEditPost ] = useState(false);\n    const[ replyResult, setReplyResult ] = useState( [] )\n    const[ numberReply, setNumberReply] = useState()\n    const[ myLike, setMyLike ] = useState();\n    const[ myName, setMyName ] = useState('');\n    const [alertMessage, setAlertMessage] = useState( {type: \"\", message: \"\"})\n    const pageStyle = {\n        mainPost: {boxShadow: \"5px 3px #9E9E9E\", border: \"1px solid #9f6934\", background: \"#90ee90\"},\n        mainBtn: {display:\"block\", backgroundColor: 'transparent', border: 'none', color:'#9f6934', fontWeight:'bold'},\n        btn: {backgroundColor: 'transparent', border: 'none', display: 'inline', color:'#9f6934', fontWeight:'bold' }\n    }\n   \n    let params = useParams();\n    let{ name }=useParams();\n    \n    let{ postId } = useParams();\n  \n    // console.log(name) // console.log(params)\n   \n    let location = useLocation();\n   console.log('location is', location)\n   console.log('params is', params)\n\n    const loadPage = async () => {\n        //get the main post of the page\n        const apiGetWalkPost = await fetch(`/api/walkpost/${postId}`).then( result => result.json() )\n        // console.log(apiGetWalkPost[0].comment)\n        setWalkPost(apiGetWalkPost)\n        setMyName(apiGetWalkPost.user.name)\n        //get replies for the post\n        const apiGetReply = await fetch(`/api/replydata/${postId}`).then( result => result.json() )\n        // console.log([apiGetReply[0].comment])\n        apiGetReply.forEach(element => { \n            element.createdAt = new Date(element.createdAt).toString().substring(4, 15)   \n            element.updatedAt = new Date(element.updatedAt).toString().substring(4, 15) \n        });\n        setReplyResult(apiGetReply)\n        let replyArray = apiGetReply.length;\n        setNumberReply(replyArray);   \n        setMyLike(apiGetWalkPost.likes);     \n    }\n    // console.log(walkPost);\n    // console.log('the reply result is',replyResult)\n    //submitForm for the Post reply\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        setShowForm(false);\n        setEditPost(false);\n    }\n    \n    //passing data from child to parent\n    const alertSuccess = (msg) => {\n        setAlertMessage({type: 'success', message: msg})\n        setTimeout( function(){ setAlertMessage( {} ); }, 1000 );\n    }\n\n    //passing data from child to parent\n    const alertFailure = (msg) => {\n        setAlertMessage({type: 'danger', message: msg})\n        setTimeout( function(){ setAlertMessage({}); }, 1000 );\n    }\n    //submit form for the comments\n    const addBtnReply = (e, idx) => {\n        e.preventDefault();\n        if(localStorage.id){\n            setReplyForm({id: idx, state: true});\n        } else \n        {\n            setReplyForm({id: '', state: false});\n        }\n  \n    }\n\n    const submitReply = (e, idx) => {\n        setReplyForm({id: idx, state: false});\n        setEditForm({id: idx, state: false});\n        e.preventDefault();\n    }\n\n    useEffect( function(){\n        loadPage();\n    }, [] );\n\n    //likes counter\n    const handleLike = async (e) => {\n        e.preventDefault(); \n\n        const apiLikeInc = await fetch(`/api/likeInc/${postId}`, \n            {   method: 'post',\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify()\n          }).then( result=>result.json()); \n        loadPage();\n    }\n\n    const deleteBtnPost = async (e, idx, replyId) => {\n        e.preventDefault();\n        let id = e.target.id; \n        // console.log(id)\n        if(localStorage.id == id || localStorage.type === 'admin'){\n            const apiDeleteReply = await fetch(`/api/deletereply/${replyId}`, \n            {   method: 'delete'\n                \n            })\n            .then( result=>result.json()) \n            console.log(apiDeleteReply)\n        }\n        loadPage();\n    }\n\n    const editReply = (e, idx) => {\n        let id = e.target.id;\n        if(localStorage.id == id || localStorage.type === 'moderator' || localStorage.type === 'admin'){\n            setEditForm({id: idx, state: true});\n        }else{\n            setEditForm({id: '', state: false});\n        }\n       \n    }\n\n    const handleDelete = async (e, id, userId) => {\n        e.preventDefault();\n        const apiDeletePost = await fetch(`/api/deletepost/${id}/${userId}`, \n        {   method: 'delete'\n            \n        })\n        .then( result=>result.json()); \n        console.log(apiDeletePost);\n        window.location.href=\"/the-walks\";    \n    }\n\n    const handleEditPost = (e) => {\n        e.preventDefault();\n        setEditPost(true)\n    }\n   \n    return (\n        <div>\n            <div style={{textAlign: 'center'}} class={alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide'  } role=\"alert\" >\n                    {alertMessage.message}\n            </div>\n      \n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Forum</h2>\n                </div>\n                \n                   \n               \n                \n                <div class=\"col-lg-12 mx-auto\">\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-10\">\n                            <h2 class=\"my-4\">{walkPost.title}</h2>\n                        </div>\n                        <div class=\"col-10\" style={pageStyle.mainPost}>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\">\n                                    <p style={{padding: '0px', fontSize: '20px'}}><b>{myName}</b></p>\n                                </div>      \n                                <div class=\"col-lg-3\" style={{fontSize: '20px'}}>\n                                    <small><b>{walkPost.createdAt}</b></small>\n                                </div> \n                                <div class=\"col-lg-3\" style={{fontSize: '20px'}} >\n                                    <small><b>Replies:{numberReply}</b></small>\n                                </div> \n                                { editPost ? <EditPost submitForm={submitForm} walkPost={walkPost} loadPage={loadPage}/> : <div class=\"col-12 mx-auto\">\n                                    <p class=\"my-4\" style={{fontSize: '20px'}}>{walkPost.message}</p>\n                                    </div> }\n                                <div class=\"col-12 mt-4\">\n                                    \n                                </div>     \n                            </div>\n                        </div>\n                        <div  class=\"col-lg-10 col-md-10 mt-2\" >\n                            <div class=\"row justify-content-start\">\n                                <div class=\"col-lg-1 col-md-1\">\n                                    <div><button style={pageStyle.btn} type=\"submit\" onClick={e => {handleLike(e)}}><i class=\"fas fa-thumbs-up\"></i></button>{walkPost.likes}</div>\n                                </div>\n                                <div class=\"col-lg-1 col-md-1\">\n                                    <button onClick={function () { localStorage.id ? setShowForm(true) : setShowForm(false)}} style={pageStyle.mainBtn}>Reply</button>\n                                    { showForm ?  <PostForm submitForm={submitForm} walkPost={walkPost} loadPage={loadPage} alertSuccess={alertSuccess} alertFailure={alertFailure}/> : ''}\n                                </div>\n                                <div class=\"col-lg-1 col-md-1\">\n                                    { localStorage.id === walkPost.userId || localStorage.type === 'moderator' || localStorage.type === 'admin'? <button onClick={handleEditPost} style={pageStyle.mainBtn}>Edit</button> : '' }\n                                </div>\n                                <div class=\"col-lg-1 col-md-1\">\n                                    { localStorage.id === walkPost.userId || localStorage.type === 'admin'? <button onClick={ e => handleDelete(e, walkPost._id, walkPost.userId)} style={pageStyle.mainBtn}>Delete</button> : ''}\n                                </div>\n                            </div>\n\n                        </div>\n                        {/* <div class=\"col-10 mx-auto mt-2\" style={{border: \"1px solid #9f6934\"}}>\n                            <button style={pageStyle.btn} type=\"submit\" onClick={e => {handleLike(e)}}><i class=\"fas fa-thumbs-up\"></i><span class=\"pl-2\">{myLike}</span></button>\n                            <button onClick={() => setShowForm(true)} style={pageStyle.mainBtn}>Reply</button>\n                            { showForm ?  <PostForm submitForm={submitForm} walkPost={walkPost} loadPage={loadPage}/> : ''}\n                            <button onClick={() => setShowForm(true)} style={pageStyle.mainBtn}>Edit</button>\n                            <button onClick={() => setShowForm(false)} style={pageStyle.mainBtn}>Delete</button>\n                        </div>     */}\n                    </div>    \n                </div>    \n            </div>\n            <div class=\"row mt-4\">\n                <div class=\"col-lg-12\">\n                {replyResult.length !== 0 ? replyResult.map( (reply, idx) => <div class=\"row justify-content-center my-4\">\n                        <div class=\"col-lg-10 py-2\" style={{border:'2px solid #9f6934'}}>\n                            <div class=\"row\">\n                                <div class=\"col-lg-2\">\n                                    <b>{reply.createdAt}</b>\n                                </div>   \n                                <div class=\"col-lg-2\">\n                                    <b>{reply.user.name}</b>\n                                </div>     \n                            </div>\n                           \n                        </div>\n                        <div class=\"col-lg-10\" >\n                            <div class=\"row\" style={{border:'1px solid #9f6934', background: '#D2B48C'}}>\n                                <div class=\"col-lg-10\">\n                                    <div class=\"row\">\n                                        {/* <div class=\"col-lg-6\">{reply.user.name}</div> */}\n                                        <div class=\"col-lg-4\"></div>\n                                    </div>        \n                                </div>\n                                { editForm.id == idx && editForm.state ? <EditCommentForm submitReply={submitReply} idx={idx} reply={reply} loadPage={loadPage}/> : <div class=\"col-lg-12 my-4\">\n                                    {reply.message}\n                                </div> }\n                                <div class=\"col-lg-12\" >\n                                    <div class=\"row justify-content-end\">\n                                        <button class=\"pr-4\" type=\"submit\" id={idx} onClick={e => addBtnReply(e, idx)} style={pageStyle.btn}>Reply</button><br/>\n                                        {/* { replyForm.id == idx && replyForm.state ? <CommentForm submitReply={submitReply} idx={idx} reply={reply} loadPage={loadPage}/> : ''} */}\n                                        <button class=\"pr-4\" type=\"submit\" id={reply.userId} onClick={e => editReply(e, idx)} style={pageStyle.btn}>Edit</button><br/>\n                                        <button class=\"pr-4\" type=\"submit\" id={reply.userId} onClick={e => deleteBtnPost(e, idx, reply._id)} style={pageStyle.btn}>Delete</button> <br/>\n                                        { replyForm.id == idx && replyForm.state ? <CommentForm submitReply={submitReply} idx={idx} alertSuccess={alertSuccess} alertFailure={alertFailure} reply={reply} loadPage={loadPage}/> : ''}\n                                        \n                                    </div>\n                                    \n                                </div>\n                            </div> \n                            <CommentArray comment={reply.comment} />   \n                        </div>\n                    </div> ) : ''}\n             \n                </div>    \n            </div>\n                        \n        </div> \n    </div>       \n    )\n}\n\nexport default Posts\n","import React from 'react'\n\nfunction SearchForm(props) {\n    return (\n        <div>\n            {/* <form>\n                <div class=\"input-group\">\n                    <input onChange={handleInputChange} value={searchInput} type=\"text\" class=\"form-control\" placeholder=\"Search your breed\"/>\n                    <div class=\"input-group-append\">\n                        <button onClick={function(){ props.setResultBreed(searchInput) }} class=\"btn btn-outline-primary\" type=\"button\">Search</button>\n                    </div>\n                </div>\n\n                <div class=\"mb-3\">\n                    <ul class=\"col-6 list-group\">\n                        { showList.map( breed =><li class=\"list-group-item\" onClick={()=>setFormValue(breed)}>{breed}</li> )}\n                    </ul>\n                </div>\n            </form>      */}\n            \n        </div>\n    )\n}\n\nexport default SearchForm\n","import React from 'react'\nimport { Redirect} from 'react-router-dom';\nimport SearchForm from './SearchForm'\nimport ModeratorTable from './ModeratorTable'\n\n\n\nconst Admin = () => {\n\n    // if(localStorage.id == ''){\n    //     return <Redirect to='/login' />\n    // }\n    return( localStorage.id == ''? <Redirect to='/login' />: '')\n    \n    return (\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <h1>The admin page</h1> \n                   <SearchForm /> \n                   <ModeratorTable/>\n            </div>            \n        </div>\n    )\n}\n\nexport default Admin\n","import React, {useState} from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport Registration from './components/Registration/Registration';\nimport Homepage from './components/Homepage/Homepage';\nimport ForumHome from './components/Forum/ForumHome';\nimport LoginPage from './components/Loginout/LoginPage';\nimport LogoutPage from './components/Loginout/LogoutPage';\nimport Search from './components/Search/Search';\nimport Footer from './components/Footer/Footer';\nimport Navbar from './components/Navbar';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport TheWalks from './components/Forum/TheWalks';\nimport Yapping from './components/Forum/Yapping';\nimport CoolPics from './components/Forum/CoolPics';\nimport Posts from './components/Posts/Posts';\nimport Admin from './components/Admin/Admin';\n\n\nfunction App() {\n\n  let id = localStorage.id;\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <div className=\"container-fluid\" style={{minHeight: \"80vh\", padding: \"0\"}}>\n        \n\n          <Route exact path={[\"/\", \"/homepage\"]} component={ForumHome} />\n          {/* <Route exact path={\"/forum\"} component={ForumHome} /> */}\n          <Route exact path=\"/Search\" component={Search} />\n          <Route exact path=\"/registration\" component={Registration} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/logout\" component={LogoutPage} />\n          <Route exact path=\"user/:id\" component={Dashboard} />\n          <Route exact path=\"/the-walks\" component={TheWalks} />\n          <Route exact path=\"/yapping\" component={Yapping} />\n          <Route exact path=\"/treats\" component={CoolPics} />\n          <Route exact path=\"/the-walks/:name/:postId\" component={Posts} />\n          <Route exact path=\"/admin\" component={Admin} />\n          <Route exact path=\"/user/:id\" component={Dashboard}/> \n          {/* <Route exact path=\"/the-walks/:id\" component={Posts} /> */}\n        </div>\n        <Footer />\n\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}